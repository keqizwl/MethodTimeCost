// show how much time each task costs.
project.gradle.addListener(new BuildTimeListener())

public class BuildTimeListener implements TaskExecutionListener, BuildListener {

    private Clock clock
    private times = new HashMap<Integer, Object>()

    @Override
    void beforeExecute(Task task) {
        clock = new org.gradle.util.Clock()
        println "TaskStart ==>> " + task.name
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.timeInMs
        times.put(ms, task.path)
        println "TaskEnd   ==>> " + task.name
        println "UseTimes  ==>> " + ms
        println "===================================================="
    }

    @Override
    void buildFinished(BuildResult result) {
        println "TimesDetails:"
        def treeMap = new TreeMap(times)
        for (time in treeMap) {
            if (time.key >= 50) {
                printf "%7sms  %s\n", time.key, time.value
            }
        }
    }

    @Override
    void buildStarted(Gradle gradle) {}

    @Override
    void projectsEvaluated(Gradle gradle) {}

    @Override
    void projectsLoaded(Gradle gradle) {}

    @Override
    void settingsEvaluated(Settings settings) {}

}